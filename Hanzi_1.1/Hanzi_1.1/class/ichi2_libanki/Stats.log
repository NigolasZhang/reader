null/****************************************************************************************
 * Copyright (c) 2011 Norbert Nagold <norbert.nagold@gmail.com>                         *
 * Copyright (c) 2014 Michael Goldbach <michael@m-goldbach.net>                         *
 *                                                                                      *
 * This program is free software; you can redistribute it and/or modify it under        *
 * the terms of the GNU General Public License as published by the Free Software        *
 * Foundation; either version 3 of the License, or (at your option) any later           *
 * version.                                                                             *
 *                                                                                      *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY      *
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A      *
 * PARTICULAR PURPOSE. See the GNU General Public License for more details.             *
 *                                                                                      *
 * You should have received a copy of the GNU General Public License along with         *
 * this program.  If not, see <http://www.gnu.org/licenses/>.                           *
 ****************************************************************************************/

package com.ichi2.libanki;

import android.content.Context;
import android.database.Cursor;

import com.ichi2.anki.AnkiDroidApp;
import com.ichi2.anki.R;

import org.json.JSONException;
import org.json.JSONObject;

import java.text.SimpleDateFormat;
import java.util.*;

import timber.log.Timber;

/**
 * Deck statistics.
 */
public class Stats {

    public static final int TYPE_MONTH = 0;
    public static final int TYPE_YEAR = 1;
    public static final int TYPE_LIFE = 2;

    public static enum ChartType {FORECAST, REVIEW_COUNT, REVIEW_TIME,
        INTERVALS, HOURLY_BREAKDOWN, WEEKLY_BREAKDOWN, ANSWER_BUTTONS, CARDS_TYPES, OTHER};
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
        }

        // small adjustment for a proper chartbuilding with achartengine
        if (type != TYPE_LIFE && (list.size() == 0 || list.get(0)[0] > -num)) {
            list.add(0, new double[] { -num, 0, 0, 0, 0, 0 });
        } else if (type == TYPE_LIFE && list.size() == 0) {
            list.add(0, new double[] { -12, 0, 0, 0, 0, 0 });
        }
        if (list.get(list.size() - 1)[0] < 0) {
            list.add(new double[] { 0, 0, 0, 0, 0, 0 });
        }

        mSeriesList = new double[6][list.size()];
        for (int i = 0; i < list.size(); i++) {
            double[] data = list.get(i);
            mSeriesList[0][i] = data[0]; // day
            mSeriesList[1][i] = data[1] + data[2] + data[3] + data[4] + data[5]; // lrn
            mSeriesList[2][i] = data[2] + data[3] + data[4] + data[5]; // relearn
            mSeriesList[3][i] = data[3] + data[4] + data[5]; // young
            mSeriesList[4][i] = data[4] + data[5]; // mature
            mSeriesList[5][i] = data[5]; // cram
            if(mSeriesList[1][i] > mMaxCards)
                mMaxCards = (int) Math.round(data[1] + data[2] + data[3] + data[4] + data[5]);

            if(data[5] >= 0.999)
                mFoundCramCards = true;

            if(data[1] >= 0.999)
                mFoundLearnCards = true;

            if(data[2] >= 0.999)
                mFoundRelearnCards = true;
            if(data[0] > mLastElement)
                mLastElement = data[0];
            if(data[0] < mFirstElement)
                mFirstElement = data[0];
            if(data[0] == 0){
                mZeroIndex = i;
            }
        }
        mMaxElements = list.size()-1;

        mCumulative = new double[6][];
        mCumulative[0] = mSeriesList[0];
        for(int i= 1; i<mSeriesList.length; i++){
            mCumulative[i] = createCumulative(mSeriesList[i]);
            if(i>1){
                for(int j = 0; j< mCumulative[i-1].length; j++){
                    mCumulative[i-1][j] -= mCumulative[i][j];
                }
            }
        }

        switch (mType) {
            case TYPE_MONTH:
                mFirstElement = -31;
                break;
            case TYPE_YEAR:
                mFirstElement = -52;
                break;
            default:
        }


        mMcount = 0;
        // we could assume the last element to be the largest,
        // but on some collections that may not be true due some negative values
        //so we search for the largest element:
        for(int i = 1; i < mCumulative.length; i++){
            for(int j = 0; j< mCumulative[i].length; j++){
                if(mMcount < mCumulative[i][j])
                    mMcount = mCumulative[i][j];
            }
        }

        //some adjustments to not crash the chartbuilding with emtpy data

        if(mMaxCards == 0)
            mMaxCards = 10;

        if(mMaxElements == 0){
            mMaxElements = 10;
        }
        if(mMcount == 0){
            mMcount = 10;
        }
        if(mFirstElement == mLastElement){
            mFirstElement = -10;
            mLastElement = 0;
        }
        return list.size() > 0;
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }

    public static double[] createCumulative(double [] nonCumulative){
        double[] cumulativeValues = new double[nonCumulative.length];
        cumulativeValues[0] = nonCumulative[0];
        for(int i = 1; i<nonCumulative.length; i++){
            cumulativeValues[i] = cumulativeValues[i-1] + nonCumulative[i];
        }
        return cumulativeValues;
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
==<>==<>==<>==<>==<>==
    }
}
